$date
	Mon Oct  6 15:39:08 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu4b_tb $end
$var wire 1 ! zero $end
$var wire 1 " overflow $end
$var wire 1 # done $end
$var wire 8 $ Y [7:0] $end
$var reg 4 % A [3:0] $end
$var reg 4 & B [3:0] $end
$var reg 1 ' clk $end
$var reg 1 ( init $end
$var reg 1 ) rst $end
$var reg 3 * sel [2:0] $end
$scope module uut $end
$var wire 4 + A [3:0] $end
$var wire 4 , B [3:0] $end
$var wire 1 ' clk $end
$var wire 1 ( init $end
$var wire 1 ) rst $end
$var wire 3 - sel [2:0] $end
$var wire 1 . sub_over $end
$var wire 1 / sum_over $end
$var wire 1 0 sum_zero $end
$var wire 4 1 sum_res [3:0] $end
$var wire 1 2 sub_zero $end
$var wire 4 3 sub_res [3:0] $end
$var wire 1 4 mul_zero $end
$var wire 8 5 mul_res [7:0] $end
$var wire 1 6 mul_over $end
$var wire 1 7 mul_done $end
$var reg 8 8 Y [7:0] $end
$var reg 1 # done $end
$var reg 1 " overflow $end
$var reg 1 ! zero $end
$scope module MULT $end
$var wire 4 9 MD [3:0] $end
$var wire 4 : MR [3:0] $end
$var wire 1 ' clk $end
$var wire 1 ( init $end
$var wire 1 ) rst $end
$var parameter 3 ; ADD $end
$var parameter 3 < CHECK $end
$var parameter 3 = END1 $end
$var parameter 3 > SHIFT $end
$var parameter 3 ? START $end
$var reg 4 @ A [3:0] $end
$var reg 4 A B [3:0] $end
$var reg 8 B PP [7:0] $end
$var reg 1 7 done $end
$var reg 3 C fsm_state [2:0] $end
$var reg 3 D next_state [2:0] $end
$var reg 1 6 overflow $end
$var reg 2 E shift_count [1:0] $end
$var reg 1 4 zero $end
$upscope $end
$scope module RESTA $end
$var wire 4 F A [3:0] $end
$var wire 4 G B [3:0] $end
$var wire 1 H Ci $end
$var wire 1 . overflow $end
$var wire 1 2 zero $end
$var wire 1 I c2 $end
$var wire 1 J c1 $end
$var wire 1 K c0 $end
$var wire 4 L S [3:0] $end
$var wire 1 M Co $end
$var wire 4 N B_comp [3:0] $end
$scope module bit0 $end
$var wire 1 O A $end
$var wire 1 P B $end
$var wire 1 Q Ci $end
$var wire 1 K Co $end
$var wire 1 R S $end
$var wire 1 S and1 $end
$var wire 1 T and2 $end
$var wire 1 U xor1 $end
$upscope $end
$scope module bit1 $end
$var wire 1 V A $end
$var wire 1 W B $end
$var wire 1 K Ci $end
$var wire 1 J Co $end
$var wire 1 X S $end
$var wire 1 Y and1 $end
$var wire 1 Z and2 $end
$var wire 1 [ xor1 $end
$upscope $end
$scope module bit2 $end
$var wire 1 \ A $end
$var wire 1 ] B $end
$var wire 1 J Ci $end
$var wire 1 I Co $end
$var wire 1 ^ S $end
$var wire 1 _ and1 $end
$var wire 1 ` and2 $end
$var wire 1 a xor1 $end
$upscope $end
$scope module bit3 $end
$var wire 1 b A $end
$var wire 1 c B $end
$var wire 1 I Ci $end
$var wire 1 M Co $end
$var wire 1 d S $end
$var wire 1 e and1 $end
$var wire 1 f and2 $end
$var wire 1 g xor1 $end
$upscope $end
$upscope $end
$scope module SUMA $end
$var wire 4 h A [3:0] $end
$var wire 4 i B [3:0] $end
$var wire 1 j Ci $end
$var wire 1 / overflow $end
$var wire 1 0 zero $end
$var wire 1 k c2 $end
$var wire 1 l c1 $end
$var wire 1 m c0 $end
$var wire 4 n S [3:0] $end
$var wire 1 o Co $end
$scope module bit0 $end
$var wire 1 p A $end
$var wire 1 q B $end
$var wire 1 r Ci $end
$var wire 1 m Co $end
$var wire 1 s S $end
$var wire 1 t and1 $end
$var wire 1 u and2 $end
$var wire 1 v xor1 $end
$upscope $end
$scope module bit1 $end
$var wire 1 w A $end
$var wire 1 x B $end
$var wire 1 m Ci $end
$var wire 1 l Co $end
$var wire 1 y S $end
$var wire 1 z and1 $end
$var wire 1 { and2 $end
$var wire 1 | xor1 $end
$upscope $end
$scope module bit2 $end
$var wire 1 } A $end
$var wire 1 ~ B $end
$var wire 1 l Ci $end
$var wire 1 k Co $end
$var wire 1 !" S $end
$var wire 1 "" and1 $end
$var wire 1 #" and2 $end
$var wire 1 $" xor1 $end
$upscope $end
$scope module bit3 $end
$var wire 1 %" A $end
$var wire 1 &" B $end
$var wire 1 k Ci $end
$var wire 1 o Co $end
$var wire 1 '" S $end
$var wire 1 (" and1 $end
$var wire 1 )" and2 $end
$var wire 1 *" xor1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b0 ?
b11 >
b100 =
b1 <
b10 ;
$end
#0
$dumpvars
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
b0 n
0m
0l
0k
0j
b0 i
b0 h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
b0 N
0M
b0 L
0K
0J
0I
0H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 :
b0 9
b0 8
07
06
b0 5
04
b0 3
12
b0 1
10
z/
z.
b0 -
b0 ,
b0 +
b0 *
1)
0(
0'
b0 &
b0 %
b0 $
1#
z"
1!
$end
#5
1'
#10
0'
#15
1'
#20
1'"
1k
1#"
1l
1X
1^
1{
0!
b1000 $
b1000 8
02
b1110 3
b1110 L
1d
0!"
1K
1J
1m
00
b1000 1
b1000 n
0y
1g
1$"
1S
1Y
1t
1|
1P
1W
1c
1q
1~
1O
1V
1p
1w
0'
b1011 N
b101 &
b101 ,
b101 :
b101 G
b101 i
b11 %
b11 +
b11 9
b11 F
b11 h
0)
#25
1M
0^
1f
0d
0J
0{
b11 3
b11 L
1R
0K
1I
b1001 1
b1001 n
1s
0m
1[
0Y
0|
1z
1U
0S
1_
1v
0t
0W
1]
1x
0~
0O
1\
0p
1}
b11 $
b11 8
b1101 N
b11 &
b11 ,
b11 :
b11 G
b11 i
b110 %
b110 +
b110 9
b110 F
b110 h
b1 *
b1 -
1'
#30
0'
#35
b100 A
b11 @
0'"
0k
0M
0#"
1!"
0f
1d
b111 1
b111 n
1y
0l
b1111 3
b1111 L
1^
0I
1|
0z
1a
0_
b1 D
0P
0q
0x
1~
1O
0\
1p
0}
0#
0"
b0 $
b0 8
1(
b1100 N
b100 &
b100 ,
b100 :
b100 G
b100 i
b11 %
b11 +
b11 9
b11 F
b11 h
b10 *
b10 -
1'
#40
0'
#45
b1 C
b11 D
0(
1'
#50
0'
#55
b1 D
b11 C
1'
#60
0'
#65
b11 D
b1 E
b10 A
b1 C
1'
#70
0'
#75
b1 D
b11 C
1'
#80
0'
#85
b10 D
b10 E
b1 A
b1 C
1'
#90
0'
#95
b11 D
b10 C
1'
#100
0'
#105
b1100 $
b1100 8
b100 D
b1100 5
b1100 B
b11 C
1'
#110
0'
#115
b0 D
b100 C
b11 E
b0 A
1'
#120
0'
#125
1#
17
b0 C
1'
#130
0'
#135
1'"
1k
1#"
00
0!"
1l
1M
1{
0y
1f
02
0d
0R
1K
b1000 1
b1000 n
0s
1m
1X
b10 3
b10 L
0^
1I
0U
1S
0v
1t
0[
0a
1_
1P
1q
1x
0~
0V
1\
0w
1}
b111 $
b111 8
b1101 N
b11 &
b11 ,
b11 :
b11 G
b11 i
b101 %
b101 +
b101 9
b101 F
b101 h
b11 *
b11 -
1'
#140
0'
#145
0'"
0k
0#"
1!"
0X
0M
0l
1R
0K
1^
0I
0f
b101 3
b101 L
0d
1s
0m
0{
b101 1
b101 n
0y
1U
0S
1a
0_
0g
1v
0t
0|
0P
0]
0c
0q
0x
b1010 $
b1010 8
b0 N
b0 &
b0 ,
b0 :
b0 G
b0 i
b100 *
b100 -
1'
#150
0'
#155
1'
#160
0'
#165
1'
#170
0'
#175
1'
